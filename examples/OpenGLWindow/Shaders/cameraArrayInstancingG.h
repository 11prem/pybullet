//this file is autogenerated using stringify.bat (premake --stringify) in the build folder of this project
static const char* cameraArrayInstancingGeometryShader= \
"#extension GL_ARB_shader_viewport_layer_array: enable\n"
"#extension GL_NV_viewport_array : enable\n"
"precision highp float;\n"
"layout(invocations = cameraArraySize) in;\n"
"layout (triangles) in;\n"
"layout (triangle_strip, max_vertices = 3) out;\n"
"uniform mat4 ModelViewMatrix[cameraArraySize];\n"
"uniform mat4 ProjectionMatrix[cameraArraySize];\n"
"uniform vec3 lightDirIn;\n"
"in Fragment\n"
"{\n"
"     vec4 color;\n"
"} fragment_[];\n"
"in Vert\n"
"{\n"
"	vec4 pos;\n"
"	vec2 texcoord;\n"
"} vert_[];\n"
"in vec3 normal_[],ambient_[];\n"
"out Fragment\n"
"{\n"
"     vec4 color;\n"
"} fragment;\n"
"out Vert\n"
"{\n"
"	vec2 texcoord;\n"
"} vert;\n"
"out vec3 lightDir,normal,ambient;\n"
"void main(void)\n"
"{\n"
"	mat4 mvp = ProjectionMatrix[gl_InvocationID] * ModelViewMatrix[gl_InvocationID];\n"
"	\n"
"    for (int i = 0; i < gl_in.length(); i++)\n"
"    {\n"
"        fragment.color = fragment_[i].color;\n"
"		vert.texcoord = vert_[i].texcoord;\n"
"		lightDir = lightDirIn;\n"
"		normal = normal_[i];\n"
"		ambient = ambient_[i];\n"
"		\n"
"		gl_Position =  mvp * vert_[i].pos;\n"
"        gl_ViewportIndex = gl_InvocationID;\n"
"        EmitVertex();\n"
"    }\n"
"    EndPrimitive();\n"
"};\n"
;
